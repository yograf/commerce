<?php
Class CommerceGlobalonePost {

	public $_paymentURL ;
	public $_paymentParams ;
	public $_xml ;
	public $_terminal ;
	public $_postHash ;
	public $_postDateTime ;
	public $_normalizedPaymentParams ;
	public $_normalizedPaymentReponse ;
	public $Pivotal_Config ;

	public function __construct($paymentURL,$paymentParams){
		$this->_paymentURL = $paymentURL;
		$this->_paymentParams = $paymentParams;
		$this->_postDateTime = date('d-m-Y:H:i:s').':000';
	}

	public function sendPayment(){
		$curl = new CommerceGlobaloneCurl();

		//$this->_terminal = $this->Pivotal_Config->readCurrencyTerminal($this->_paymentParams['CURRENCY']);
    $this->_terminal = array(
      'Currency' => 'MCP',
      'TerminalID' => '36001',
      'SharedSECRET' => 'SandboxSecret001',
    );

		
		$format = new CommerceGlobaloneFormat($this->_paymentParams,$this->_terminal,$this->createHash(),$this->_postDateTime);
		//$this->_normalizedPaymentParams = $format->getNormalizedPaymentParams();
		$resp = $curl->curlXmlRequest($this->_paymentURL,$format->getXML());
	//	$resp['STATUS'] = $this->controlResponseHash($normalizedPaymentReponse);
		return $resp;

	}

	public function getXML(){
		return $this->_xml;
	}

	public function createHash(){
		
		$params = $this->_paymentParams;

		$stringToHash = '';
		$stringToHash .= $this->_terminal;
		$stringToHash .= $params['ORDERID'];
		$stringToHash .= $params['AMOUNT'];
		$stringToHash .= $this->_postDateTime;
		$stringToHash .= $this->_secret;
		$this->_postHash = md5($stringToHash);
		return md5($stringToHash);
	}

	public function controlResponseHash($responseHash){
		if(isset($responseHash['ERRORSTRING'])):
			return false;
		else:
			$this->_normalizedPaymentReponse=$responseHash;
			return ($this->buildResponseHash() == $responseHash['HASH']);
		endif;
	}

	public function getNormalizedPaymentReponse(){
		return $this->_normalizedPaymentReponse;
	}
	public function getNormalizedPaymentParams(){
		return $this->_normalizedPaymentParams;
	}

}
